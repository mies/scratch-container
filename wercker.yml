# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# http://devcenter.wercker.com/docs/pipelines/index.html

# You can also use services such as databases. Read more on our dev center:
# http://devcenter.wercker.com/docs/services/index.html
# services:
    # - postgres
    # http://devcenter.wercker.com/docs/services/postgresql.html

    # - mongodb
    # http://devcenter.wercker.com/docs/services/mongodb.html
build:
# This references the default golang container from
# the Docker Hub: https://registry.hub.docker.com/u/library/golang/
# If you want Google's container you would reference google/golang
# Read more about containers on our dev center
# http://devcenter.wercker.com/docs/containers/index.html
  box: google/golang
  # The steps that will be executed on build
  # Steps make up the actions in your pipeline
  # Read more about steps on our dev center:
  # http://devcenter.wercker.com/docs/steps/index.html
  steps:
    # Sets the go workspace and places you package
    # at the right place in the workspace tree
    - setup-go-workspace

    # Gets the dependencies
    - script:
        name: go get
        code: |
          go get

    # Build the project
    - script:
        name: go build
        code: |
          CGO_ENABLED=0 go build -a -ldflags '-s' -installsuffix cgo -o app .

    # Test the project
    - script:
        name: go test
        code: |
          go test ./...
    - script:
        name: copy binary to WERCKER_OUTPUT_DIR
        code: cp app "$WERCKER_OUTPUT_DIR"

deploy:
  box: google/golang
  steps:
    - internal/docker-push:
        username: $QUAY_USERNAME
        password: $QUAY_PASSWORD
        env:
          PORT: 5000
        cmd: /app
        tag: $WERCKER_GIT_COMMIT
        ports: "$PORT"
        repository: quay.io/mies/scratch-container
        registry: https://quay.io
    
